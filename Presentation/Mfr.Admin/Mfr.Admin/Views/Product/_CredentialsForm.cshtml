@using Kendo.Mvc.UI
@model Mfr.Admin.Models.Product.ProductViewModel

<div class="panel-body bio-graph-info">


    <h1>Basic Information of object</h1>
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new {@class = "col-md-2 control-label"})

        @(Html.Kendo().TextBoxFor(model => model.Title)
              .HtmlAttributes(new {style = "width:50%"}))
        @Html.ValidationMessageFor(c => c.Title, "", new {@class = "help-block"})
    </div>
    <div class="form-group">
        <div class="k-rtl">
            @Html.LabelFor(m => m.Description, new {@class = "col-md-2 control-label"})
            @*@(Html.Kendo().TextBoxFor(model => model.Description)
                    .HtmlAttributes(new {style = "width:50%"}))*@

            @Html.TextAreaFor(c => c.Description, new {@class = "k-textbox", style = "width: 50%;"})
            @Html.ValidationMessageFor(c => c.Description, "", new {@class = "help-block"})
        </div>
        @Html.LabelFor(m => m.ProductTypeId, new {@class = "col-md-2 control-label"})
        @(Html.Kendo().DropDownListFor(m => m.ProductTypeId)
              .HtmlAttributes(new {style = "width:50%"})
              .OptionLabel("Choose the category...")
              .DataTextField("Title")
              .DataValueField("Id")
              .Filter("startswith")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetProductTypeCombo", "Product");
                  });
              })
              )
        @Html.ValidationMessageFor(c => c.ProductTypeId, "", new {@class = "help-block"})
    </div>

</div>
